function [sounds,feedback] = feedback_init(window,time)%function [sounds,feedback] = feedback_init(window,time)%%initialize feedback%amplitude = .1; %crude volume controlduration = 12000; hi_pitch = 12000; lo_pitch = 30000; %sort ofc_hi = 400; c_lo = 500; %instensity scaling constantsounds.rate = 22000;tc = (1:duration)/hi_pitch;tw = (1:duration)/lo_pitch;sounds.Pos = amplitude*sin(2*pi*c_hi*tc);sounds.Neg = amplitude*sin(2*pi*c_lo*tw);tc = (duration/2 + 1:duration)/hi_pitch;tw = (1:duration/2)/lo_pitch;WKSoundA = amplitude*sin(2*pi*c_hi*tc);WKSoundB = amplitude*sin(2*pi*c_lo*tw);sounds.WrongKey = [WKSoundB WKSoundA];%initialize snd and check fb duration, manually enforce fb duration rather than spending time to figure out mapping to duration variable aboveSnd('Open')start = GetSecs; Snd('Play',sounds.Neg,sounds.rate); sound_playing = 1; while sound_playing; if (GetSecs-start)>time.fbDuration;Snd('Quiet'); sound_playing=0; end; end; observed_fbtime = GetSecs-start;start = GetSecs; Snd('Play',sounds.Pos,sounds.rate);  sound_playing = 1; while sound_playing; if (GetSecs-start)>time.fbDuration;Snd('Quiet'); sound_playing=0; end; end; observed_fbtime = GetSecs-start;start = GetSecs; Snd('Play',sounds.WrongKey,sounds.rate);  sound_playing = 1; while sound_playing; if (GetSecs-start)>time.fbDuration;Snd('Quiet'); sound_playing=0; end; end; observed_fbtime = GetSecs-start;%load feedback images[feedback.correct map alpha] = imread('correct.png'); feedback.correct(:,:,4) = alpha(:,:); feedback.correct = Screen('MakeTexture',window,feedback.correct); [feedback.wrong map alpha] = imread('wrong.png'); feedback.wrong(:,:,4) = alpha(:,:); feedback.wrong = Screen('MakeTexture',window,feedback.wrong); %[feedback.nofb map alpha] = imread('xxxx.png'); feedback.nofb(:,:,4) = alpha(:,:); feedback.nofb = Screen('MakeTexture',window,feedback.nofb); 